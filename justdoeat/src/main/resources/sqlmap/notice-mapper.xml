<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice.mapper">

<delete id="delete">
	delete from notice where id = #{id}
</delete>

<update id="update">
	update notice set title=#{title}, content=#{content}
				, filename=#{filename, jdbcType=VARCHAR}
				, filepath=#{filepath, jdbcType=VARCHAR}
	where id=#{id}
</update>

<update id="readcnt">
	update notice set readcnt = readcnt + 1 
	where id = #{id}
</update>

<select id="detail" resultType="notice.NoticeVO">
	select n.*, (select name from member
	             where member.id=writer) name 
	from notice n where id = #{id}
</select> 


<insert id="reply_insert">
{
call declare begin
	<!-- 원글과 동일한 root 인 글들중에 
		 원글의 step보다 더 큰 step 을 먼저 step+1 을 한다. -->
	<![CDATA[		 
	update notice set step = step+1 
	where root = #{root} and step > #{step}; 	
	]]>

	<!-- 답글저장시 step 은 원글의 step +1, indent 은 원글의 indent +1 --> 
	insert into notice(id, root, title, content
					, writer, filename, filepath, step, indent)
	values (seq_notice.nextval
			, #{root}, #{title}, #{content}, #{writer}
			, #{filename, jdbcType=VARCHAR}
			, #{filepath, jdbcType=VARCHAR}
			, #{step}+1, #{indent}+1 );
end			
}			
</insert>

<insert id="insert">
	insert into notice(id, root, title, content, writer, filename, filepath)
	values (seq_notice.nextval, seq_notice.currval
			, #{title}, #{content}, #{writer}
			, #{filename, jdbcType=VARCHAR}
			, #{filepath, jdbcType=VARCHAR})
</insert>
<sql id="writer">
	writer in (select id from member 
			   where name like '%' || #{keyword} || '%')
</sql>

<sql id="where_search">
	<if test="search=='all' ">
	where title like '%' || #{keyword} || '%'
	or content like '%' || #{keyword} || '%'
	or <include refid="writer"/>
		<!-- writer in (select id from member 
				  where name like '%' || #{keyword} || '%') -->
	</if>
	<if test="search=='title' or search=='content'">
	where ${search} like '%' || #{keyword} || '%'
	</if>
	<if test="search=='writer' ">
	where <include refid="writer"/>
		<!-- writer in (select id from member 
					 where name like '%' || #{keyword} || '%') -->
	</if>
</sql>

<select id="totalList" resultType="integer">
	select count(*) from notice <include refid="where_search"/>
</select>

<select id="list" resultType="notice.NoticeVO">
	select * 
	from (select rownum no, (select name from member m
	                   where m.id = writer) name, n.*  
		  from (select * from notice 
		  		<include refid="where_search"/>
		  		order by root, step desc) n
		  order by no desc) 
	where no between #{beginList} and #{endList}

<!--  
	select * 
	from (select rownum no, (select name from member m
	                   where m.id = writer) name, n.*  
		  from (select * from notice order by id) n
		  order by no desc) 
	where no between #{beginList} and #{endList}

	select rownum no, (select name from member m
	                   where m.id = writer) name, n.* from 
	(select * from notice order by id) n
	order by no desc
-->
</select>

</mapper>