/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-05-19 07:58:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.game;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.concurrent.TimeUnit;

public final class roulette_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/JustDoEat_Web/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/justdoeat/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1620026369058L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.concurrent.TimeUnit");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");

int i = 1;
int max = 360;
String result= null;
int random =(int)(Math.random()*max);
float fromAngle = random+2160;
request.setAttribute("random", random);
request.setAttribute("fromAngle", fromAngle);



      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--  \r\n");
      out.write("float angle = 0.0f;\r\n");
      out.write("int i = 1;\r\n");
      out.write("int max = 360;\r\n");
      out.write("int random =(int)(Math.random()*max);\r\n");
      out.write("float fromAngle = random+2160+angle;\r\n");
      out.write("request.setAttribute(\"random\", random);\r\n");
      out.write("request.setAttribute(\"fromAngle\", fromAngle);\r\n");
      out.write(" --> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t@keyframes rotation {\r\n");
      out.write("/* \t\tint random = getRandom(360); */\r\n");
      out.write("/* \t\tfloat fromAngle = random+720+angle; */\r\n");
      out.write("\t    \r\n");
      out.write("\t   from {\r\n");
      out.write("\t     transform: rotate(0deg);\r\n");
      out.write("\t   }\r\n");
      out.write("\t   to {\r\n");
      out.write("\t     transform: rotate(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("deg);\r\n");
      out.write("\r\n");
      out.write("\t   }\r\n");
      out.write("\t }\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write(".roulette.loop {\r\n");
      out.write("  animation: rotation 5s ease-in-out forwards;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content{\r\n");
      out.write("position:relative;\r\n");
      out.write("height: 720px;\r\n");
      out.write("text-align: center;\r\n");
      out.write("font-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("h3{\r\n");
      out.write("position:absolute;\r\n");
      out.write("margin-top:-350px;\r\n");
      out.write("margin-left: 600px;\r\n");
      out.write("right: 600px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".num{\r\n");
      out.write("position:absolute;\r\n");
      out.write("margin-left: 1080px;\r\n");
      out.write("margin-top:-300px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".menu{\r\n");
      out.write("position:absolute;\r\n");
      out.write("margin-left: 1043px;\r\n");
      out.write("margin-top:-323px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content img{\r\n");
      out.write("\r\n");
      out.write(" width: 425.8px;\r\n");
      out.write("  height: 425.8px;\r\n");
      out.write("  position:relative;\r\n");
      out.write("  top:70px;\r\n");
      out.write("  left: -600px;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pin{\r\n");
      out.write("z-index:1;\r\n");
      out.write("position:relative;\r\n");
      out.write("left:-157px;\r\n");
      out.write("top:74px;\r\n");
      out.write("margin-top:100px;\r\n");
      out.write("width: 35px;\r\n");
      out.write("height: 36px;\r\n");
      out.write("margin: 0 194.9px 409.2px 195.9px;\r\n");
      out.write("padding: 9px 8px 8px;\r\n");
      out.write("}\r\n");
      out.write("h2{\r\n");
      out.write("margin-left:550px;\r\n");
      out.write("margin-top:-30px;\r\n");
      out.write("color: blue;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".content2 a:first-of-type{\r\n");
      out.write("width: 580px;\r\n");
      out.write("height: 100px;\r\n");
      out.write("margin: 40px 23px 38px 30px; \r\n");
      out.write("padding: 5px 95px 5px 95px;\r\n");
      out.write("border-radius: 60px;\r\n");
      out.write("box-shadow: 5px 20px 15px 0 rgba(0, 0, 0, 0.38);\r\n");
      out.write("border: solid 3px #00458a;\r\n");
      out.write("text-align: center;\r\n");
      out.write("font-size: 45px;\r\n");
      out.write("position: relative;\r\n");
      out.write("left: 290px;\r\n");
      out.write("color: orange;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content2 img{\r\n");
      out.write("position: absolute;\r\n");
      out.write("top:-100px;\r\n");
      out.write("}\r\n");
      out.write(".roulette{\r\n");
      out.write("\t transform: rotate(0deg);\r\n");
      out.write("\t animation: rotation 4s ease-in-out forwards;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("<img src='imgs/pin.png'alt=\"룰렛\" id=\"pin\"/>\r\n");
      out.write("<img src='imgs/roulette.png' alt=\"룰렛\" id=\"roulette\" style=\"top: 80px; left: -592px;\"/>\r\n");
      out.write("\t<h3>직접 메뉴 등록</h3>\r\n");
      out.write("\t<div class=\"menu\">\r\n");
      out.write("\t<table>\r\n");
      out.write("\t ");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      boolean _jspx_th_c_005fforEach_005f0_reused = false;
      try {
        _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fforEach_005f0.setParent(null);
        // /WEB-INF/views/game/roulette.jsp(144,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/game/roulette.jsp(144,2) '${edtos }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${edtos }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
        // /WEB-INF/views/game/roulette.jsp(144,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f0.setVar("vo");
        int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
          if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("\r\n");
              out.write("\t\t <tr>\r\n");
              out.write("\t\t \t<td class=\"left\" style=\"border-bottom: 1px solid #000; width: 400px; height: 50px; vertical-align : bottom;\">0");
              out.print(i );
              out.write('.');
              out.write(' ');
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.food }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</td></tr>\r\n");
              out.write("\t\t \t \r\n");
              out.write("\t\t \t");
i++; 
              out.write("  \r\n");
              out.write("\t");
              int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_c_005fforEach_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
        _jspx_th_c_005fforEach_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
      }
      out.write(" \r\n");
      out.write("\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"content2\">\r\n");
      out.write("\t<h2>오늘의 메뉴</h2>\r\n");
      out.write("\t<a id=\"trigger\" onclick=\"random()\">▶ START</a><a><img class='restart' alt=\"다시추천\"/></a>\r\n");
      out.write("\t<br/><br/><br/><h4>ⓘ START버튼을 누르시면 게임이 시작됩니다.</h4>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("})\r\n");
      out.write("element = document.getElementById(\"trigger\");\r\n");
      out.write("element_roulette = document.getElementById(\"roulette\");\r\n");
      out.write("function random( data ) {\r\n");
      out.write("\r\n");
      out.write("\t  element_roulette.classList.remove(\"roulette\");\r\n");
      out.write("\t  element_roulette.classList.add(\"roulette\"); \r\n");
      out.write("\t  $('#trigger').text(\"추천음식\");\r\n");
      out.write("\t  setTimeout(() => {\r\n");
      out.write("\t\t  if((");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">=2486 && ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<=2520) || (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">=2160 && ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<=2196)){\r\n");
      out.write("\t\t\t\t //Thread.sleep(4000);\r\n");
      out.write("\t\t\t\t$('#trigger').text(data);\r\n");
      out.write("\t\t\t }else if(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">=2414 && ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<=2485){\r\n");
      out.write("\t\t\t\t// Thread.sleep(4000);\r\n");
      out.write("\t\t\t\t $('#trigger').text(data); \r\n");
      out.write("\t\t\t }else if(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">=2342 && ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<=2413){\r\n");
      out.write("\t\t\t\t// Thread.sleep(4000);\r\n");
      out.write("\t\t\t\t $('#trigger').text(data); \r\n");
      out.write("\t\t\t }else if(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">=2270 && ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<=2341){\r\n");
      out.write("\t\t\t\t// Thread.sleep(4000);\r\n");
      out.write("\t\t\t\t $('#trigger').text(data); \r\n");
      out.write("\t\t\t }else if(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">=2197 && ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fromAngle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<=2269){\r\n");
      out.write("\t\t\t\t //Thread.sleep(4000);\r\n");
      out.write("\t\t\t\t $('#trigger').text(data); \r\n");
      out.write("\t\t\t }\t\r\n");
      out.write("\t}, 4000);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//public static void delay() { int delay = 1000; try { Thread.sleep(delay); } catch (InterruptedException e) { throw new RuntimeException(e); } }\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// @keyframes rotation {\r\n");
      out.write("// \t/* \t\tint random = getRandom(360); */\r\n");
      out.write("// \t/* \t\tfloat fromAngle = random+720+angle; */\r\n");
      out.write("\t\t    \r\n");
      out.write("// \t\t   from {\r\n");
      out.write("// \t\t     transform: rotate(0deg);\r\n");
      out.write("// \t\t   }\r\n");
      out.write("// \t\t   to {\r\n");
      out.write("// \t\t     transform: rotate(3250deg);\r\n");
      out.write("// \t\t   }\r\n");
      out.write("// \t\t }\r\n");
      out.write("// const roulette = document.querySelector(\".roulette\");\r\n");
      out.write("// const trigger = document.querySelector(\".trigger\");\r\n");
      out.write("// trigger.addEventListener(\"click\", onClickTrigger);\r\n");
      out.write("\r\n");
      out.write("// function onClickTrigger(e) {\r\n");
      out.write("//   roulette.classList.add(\"loop\");\r\n");
      out.write("// }\r\n");
      out.write("\r\n");
      out.write("// float rnd = Random.Range(0.0f, 0.5f);\r\n");
      out.write("\r\n");
      out.write("// this.transform.rotation = Quaternion.Euler(and, 0.0f, 0.0f);\r\n");
      out.write("\r\n");
      out.write("// Math.floor(Math.rand()*100)\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// $('.trigger').click function {\r\n");
      out.write("// \t@keyframes rotation {\r\n");
      out.write("// \t\tint random = getRandom(360);\r\n");
      out.write("// \t\tfloat fromAngle = random+720+angle;\r\n");
      out.write("\r\n");
      out.write("// \t   from {\r\n");
      out.write("// \t     transform: rotate(0deg);\r\n");
      out.write("// \t   }\r\n");
      out.write("// \t   to {\r\n");
      out.write("// \t     transform: rotate(720 deg);\r\n");
      out.write("// \t   }\r\n");
      out.write("// \t }\r\n");
      out.write("// \t});\r\n");
      out.write("</script>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
